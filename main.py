import telebot
from telebot import types
import time
import schedule
from threading import Thread
import datetime

bot = telebot.TeleBot('Token')
schedule1 = schedule.Scheduler()


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üíª –ù–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ")
    btn2 = types.KeyboardButton("üçΩ –û–±–µ–¥ 30 –º–∏–Ω")
    btn3 = types.KeyboardButton("üèñ –ü–µ—Ä–µ—Ä—ã–≤ 15 –º–∏–Ω")
    btn4 = types.KeyboardButton("‚úÖ –û–±—Ä–∞—â–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
    markup.add(btn1, btn2, btn3, btn4)
    bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –Ø –±–æ—Ç –¥–ª—è —Ç–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã. –°–µ–π—á–∞—Å —è —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ –æ "
                                           "—Å–≤–æ–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö".format(message.from_user), reply_markup=markup)
    bot.send_message(message.chat.id, text="–ù–∞–∫–∞–Ω—É–Ω–µ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è —Ç—ã –º–æ–∂–µ—à—å –ø–µ—Ä–µ—Å–ª–∞—Ç—å –º–Ω–µ –∏–∑ —Ä–∞–±–æ—á–µ–≥–æ –±–æ—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ "
                                           "—Å –≤—Ä–µ–º–µ–Ω–µ–º —Ç–≤–æ–µ–π —Å–ª–µ–¥—É—é—â–µ–π —Å–º–µ–Ω—ã. –ó–∞ 5 –º–∏–Ω—É—Ç –¥–æ –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞ —Ä–∞–±–æ—á–µ–≥–æ "
                                           "–¥–Ω—è —è –ø—Ä–∏—à–ª—é —Ç–µ–±–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ")
    bot.send_message(message.chat.id, text="–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å, —á—Ç–æ–±—ã —è –Ω–∞–ø–æ–º–Ω–∏–ª —Ç–µ–±–µ –æ —Ç–≤–æ–∏—Ö –ø–µ—Ä–µ—Ä—ã–≤–∞—Ö, –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—à–ª–∏"
                                           " –∏–∑ —Ä–∞–±–æ—á–µ–≥–æ –±–æ—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—Ä–µ–º–µ–Ω–µ–º —Ç–≤–æ–∏—Ö –ø–µ—Ä–µ—Ä—ã–≤–æ–≤ –∏ —è —Ç–∞–∫ –∂–µ –Ω–∞–ø–æ–º–Ω—é"
                                           " –∑–∞ 5 –º–∏–Ω—É—Ç –¥–æ –∏—Ö –Ω–∞—á–∞–ª–∞")
    bot.send_message(message.chat.id, text="–ö–æ–≥–¥–∞ —Ç—ã –ø–æ–ª—É—á–∏—à—å –Ω–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ - –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "
                                           "'üíª –ù–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ' –∏ —è –æ—Ç–ø—Ä–∞–≤–ª—é —Ç–µ–±–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞ 5 –º–∏–Ω—É—Ç –∏ –∑–∞ 1 –º–∏–Ω—É—Ç—É –¥–æ "
                                           "—Ç–æ–≥–æ, –∫–∞–∫ –æ–±—Ä–∞—â–µ–Ω–∏–µ —Å–ª–µ—Ç–∏—Ç")
    bot.send_message(message.chat.id, text="–ï—Å–ª–∏ –∑–∞–∫–æ–Ω—á–∏—à—å —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ –æ–±—Ä–∞—â–µ–Ω–∏–µ–º —Ä–∞–Ω—å—à–µ, —Ç–æ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É"
                                           " '‚úÖ –û–±—Ä–∞—â–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ' –∏ –Ω–∏–∫–∞–∫–∏—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –Ω–µ –ø—Ä–∏–¥–µ—Ç")
    bot.send_message(message.chat.id, text="–ö–æ–≥–¥–∞ –Ω–∞—Å—Ç–∞–Ω–µ—Ç –≤—Ä–µ–º—è –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –∏–ª–∏ –ø–µ—Ä–µ–∫—É—Å–∏—Ç—å - –Ω–∞–∂–º–∏ 'üçΩ –û–±–µ–¥ 30 –º–∏–Ω' –∏ —è "
                                           "–ø—Ä–∏—à–ª—é –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞ 1 –º–∏–Ω—É—Ç—É –¥–æ –∫–æ–Ω—Ü–∞ –æ–±–µ–¥–∞, –∏–ª–∏ –Ω–∞–∂–º–∏ "
                                           "'üèñ –ü–µ—Ä–µ—Ä—ã–≤ 15 –º–∏–Ω' –∏ —è  –Ω–∞–ø–æ–º–Ω—é –∑–∞ 1 –º–∏–Ω—É—Ç—É –¥–æ –∫–æ–Ω—Ü–∞ –ø–µ—Ä–µ—Ä—ã–≤–∞")



def schedule_checker():
    while True:
        schedule.run_pending()
        schedule1.run_pending()
        time.sleep(1)


@bot.message_handler(func=lambda message: True)
def fio(message):
    dinner_or_pause = "–†–∞–±–æ—Ç–∞ —Ä–∞–±–æ—Ç–æ–π, –∞ –æ—Ç–¥—ã—Ö –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é! –Ø —Ç–µ–±–µ –Ω–∞–ø–æ–º–Ω—é, –∫–æ–≥–¥–∞ –ø–æ—Ä–∞ –≤–∑—è—Ç—å—Å—è –∑–∞ —Ä–∞–±–æ—Ç—É."
    new_appeal = "–ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á–µ—Ç! –ö–æ–≥–¥–∞ –≤—Ä–µ–º—è –±—É–¥–µ—Ç –Ω–∞ –∏—Å—Ö–æ–¥–µ —Ç—ã –ø–æ–ª—É—á–∏—à—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ."
    end_appeal = "–û–±—Ä–∞—â–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –ï—Å–ª–∏ –ø–æ–ª—É—á–∏—à—å –Ω–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ - –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É"
    text = message.text
    if text == "üíª –ù–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ":
        bot.send_message(message.chat.id, text=new_appeal)
        schedule.clear(message.chat.id)
        schedule.every(25).minutes.do(get_sending_function(message.chat.id)).tag(message.chat.id)
        schedule.every(29).minutes.do(get_sending_notification(message.chat.id)).tag(message.chat.id)
    if text == "‚úÖ –û–±—Ä–∞—â–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ" and len(schedule.get_jobs(message.chat.id)) >= 1:
        schedule.clear(message.chat.id)
        bot.send_message(message.chat.id, text=end_appeal)
    elif text == "‚úÖ –û–±—Ä–∞—â–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ" and len(schedule.get_jobs(message.chat.id)) == 0:
        schedule.clear(message.chat.id)
    elif len(text) > 21:
        f_str = text.split('\n')
        if f_str[0].strip() == "–ë–ª–∏–∂–∞–π—à–∏–µ —Å–º–µ–Ω—ã:":
            bot.send_message(message.chat.id, text='–ü–æ–Ω—è–ª –ø—Ä–∏–Ω—è–ª')
            work_time = f_str[1][-14:len(f_str[1])]
            start_time, end_time = time_extraction(work_time)
            schedule1.every().day.at(f"{start_time.time()}").do(send_start_time(message.chat.id, "–†–∞–±–æ—á–∏–π –¥–µ–Ω—å –Ω–∞—á–Ω–µ—Ç—Å—è")).tag(message.chat.id)
            schedule1.every().day.at(f"{end_time.time()}").do(send_start_time(message.chat.id, "–†–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è")).tag(message.chat.id)
        elif f_str[0][:5] == "–°–º–µ–Ω–∞":
            bot.send_message(message.chat.id, text='–ü–æ–Ω—è–ª –ø—Ä–∏–Ω—è–ª')
            start_times = []
            for i in range(1, len(f_str)):
                pause_time = f_str[i][-14:len(f_str[i])]
                start_time, _ = time_extraction(pause_time)
                start_times.append(start_time)
            for i in range(len(start_times)):
                schedule1.every().day.at(f"{start_times[i].time()}").do(send_start_time(message.chat.id, "–ü–µ—Ä–µ—Ä—ã–≤")).tag(message.chat.id)
    elif text == "üçΩ –û–±–µ–¥ 30 –º–∏–Ω":
        schedule.clear(message.chat.id)
        bot.send_message(message.chat.id, dinner_or_pause)
        schedule.every(29).minutes.do(get_sending_dinner(message.chat.id)).tag(message.chat.id)
    elif text == "üèñ –ü–µ—Ä–µ—Ä—ã–≤ 15 –º–∏–Ω":
        schedule.clear(message.chat.id)
        bot.send_message(message.chat.id, dinner_or_pause)
        schedule.every(14).minutes.do(get_sending_dinner(message.chat.id)).tag(message.chat.id)



    print(schedule.get_jobs())
    print(schedule1.get_jobs())

def time_extraction(work_time):
    start_time, end_time = work_time.split(' - ')
    st_h, st_m = list(map(int, start_time.split(':')))
    end_h, end_m = list(map(int, end_time.split(':')))
    start_iso_time, end_iso_time = datetime.time(st_h, st_m), datetime.time(end_h, end_m)
    start_date = datetime.date.today()
    end_date = datetime.date.today()
    start_dt = datetime.datetime.combine(start_date, start_iso_time) - datetime.timedelta(minutes=5)
    end_dt = datetime.datetime.combine(end_date, end_iso_time) - datetime.timedelta(minutes=5)
    return start_dt, end_dt


def send_start_time(chatId, type_notification):
    def send_function():
        bot.send_message(chatId, f"{type_notification} —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç!")
        return schedule.CancelJob
    return send_function


def get_sending_function(chatId):
    def send_function():
        bot.send_message(chatId, "–û—Å—Ç–∞–ª–æ—Å—å 5 –º–∏–Ω—É—Ç! –°–∫–æ—Ä–æ –æ–±—Ä–∞—â–µ–Ω–∏–µ —Å–ª–µ—Ç–∏—Ç!")
        return schedule.CancelJob
    return send_function


def get_sending_notification(chatId):
    def send_function():
        bot.send_message(chatId, "–û—Å—Ç–∞–ª–∞—Å—å 1 –º–∏–Ω—É—Ç–∞! –ü—Ä–∏–≥–æ—Ç–æ–≤—å—Å—è –ª–æ–≤–∏—Ç—å!")
        return schedule.CancelJob
    return send_function


def get_sending_dinner(chatId):
    def send_function():
        bot.send_message(chatId, "–û—Å—Ç–∞–ª–∞—Å—å 1 –º–∏–Ω—É—Ç–∞! –ü—Ä–∏–≥–æ—Ç–æ–≤—å—Å—è –∫ —Ä–∞–±–æ—Ç–µ!")
        return schedule.CancelJob
    return send_function


if __name__ == "__main__":
    scheduleThread = Thread(target=schedule_checker)
    scheduleThread.daemon = True
    scheduleThread.start()

    bot.polling()

